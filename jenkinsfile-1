pipeline {
  agent { 
        dockerfile{ 
          args '-v /home/pi/.ssh:/home/pi/.ssh:ro'
        }
  }
  environment {
    VAULT_PW = credentials('vaultpw')
  }
  stages {
    stage('Test') {
      steps {
        script {
            env.DEFAULT_LOCAL_TMP = env.WORKSPACE_TMP
            env.HOME = env.WORKSPACE

            sh """
            ansible --version
            whoami
            ls -al ~
            ls -al /home/pi/.ssh/ed25519_backup_pi
            ansible-galaxy collection install community.docker
            ansible-playbook -i inventory --vault-password-file "$VAULT_PW" cd-services.yml --private-key /home/pi/.ssh/ed25519_backup_pi
            rm -rf ~/internet-pi-src
            mkdir -p ~/internet-pi-src
            git clone https://github.com/geerlingguy/internet-pi.git ~/internet-pi-src/
            cp -r ~/internet-pi/config.yml ~/internet-pi-src/
            cp -r ~/internet-pi/inventory.ini ~/internet-pi-src/
            cp -r ~/internet-pi/templates/docker-compose.yml.j2 ~/internet-pi-src/templates/
            cd ~/internet-pi-src
            ansible-galaxy collection install -r requirements.yml
            ansible-playbook --vault-password-file "$VAULT_PW" main.yml --private-key /home/pi/.ssh/ed25519_backup_pi
            """
        }
        emailext attachLog: true, body: '', subject: '$BUILD_STATUS! - $PROJECT_NAME - Build # $BUILD_NUMBER', to: '$DEFAULT_RECIPIENTS'
      }
    }
  }
}