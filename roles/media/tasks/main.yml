---

#- name: Create the {{plex_container_name}} config folder
#  ansible.builtin.file:
#    path: "{{ docker_dir }}/{{plex_container_name}}/config"
#    state: directory
#    owner: "{{ ansible_user }}"
#    group: "{{ ansible_user }}"
#    mode: 0755

#- name: Create the {{plex_container_name}} transcode folder
#  ansible.builtin.file:
#    path: "{{ docker_dir }}/{{plex_container_name}}/transcode"
#    state: directory
#    owner: "{{ ansible_user }}"
#    group: "{{ ansible_user }}"
#    mode: 0755
- name: Create the local file system
  ansible.builtin.file:
    path: "/volume1"
    state: directory
    owner: "root"
    group: "root"
    mode: 0777
  become: true

- name: Create the local file system
  ansible.builtin.file:
    path: "/volume1/docker"
    state: directory
    owner: "root"
    group: "root"
    mode: 0777
  become: true

- name: Create the local file system
  ansible.builtin.file:
    path: "/volume1/media"
    state: directory
    owner: "root"
    group: "root"
    mode: 0777
  become: true

- name: Ensure NFS client is installed
  ansible.builtin.package:
    name: nfs-common
    state: present

- name: Mount an NFS media share
  ansible.builtin.mount:
    path: /volume1/media  # Local mount point
    src: 10.0.0.2:/volume1/media  # NFS server share path
    fstype: nfs
    state: mounted
    dump: 0
    passno: 0
  become: true

- name: Mount an NFS docker share
  ansible.builtin.mount:
    path: /volume1/docker  # Local mount point
    src: 10.0.0.2:/volume1/docker  # NFS server share path
    fstype: nfs
    state: mounted
    dump: 0
    passno: 0
  become: true

- name: Create the qbt config folder
  ansible.builtin.file:
    path: "{{ docker_dir }}/{{qbt_container_name}}/config"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0755

#- name: Create the {{qbt_container_name}} media folder
#  ansible.builtin.file:
#    path: "{{ docker_dir }}/{{qbt_container_name}}/media"
#    state: directory
#    owner: "{{ ansible_user }}"
#    group: "{{ ansible_user }}"
#    mode: 0755

- name: Create the prowlarr config folder
  ansible.builtin.file:
    path: "{{ docker_dir }}/{{prowlarr_container_name}}/config"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0755

- name: Create the sonarr config folder
  ansible.builtin.file:
    path: "{{ docker_dir }}/{{sonarr_container_name}}/config"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0755

- name: Create the sabnzbd config folder
  ansible.builtin.file:
    path: "{{ docker_dir }}/{{sabnzbd_container_name}}/config"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0755

- name: Create the radarr config folder
  ansible.builtin.file:
    path: "{{ docker_dir }}/{{radarr_container_name}}/config"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0755

- name: Create the jellyfin config folder
  ansible.builtin.file:
    path: "{{ docker_dir }}/{{jellyfin_container_name}}/config"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0755

- name: Copy docker-compose.yml file in place.
  template:
    src: "docker-compose.yml.j2"
    dest: "{{ docker_dir }}/docker-compose.yml"

#- name: Tear down the media services.
#  community.docker.docker_compose_v2:
#    project_src: "{{ docker_dir }}"
#    state: absent
#  become: false

- name: Ensure the media services are running.
  community.docker.docker_compose_v2:
    project_src: "{{ docker_dir }}"
    build: never
  become: false

- name: Make jellyfin backup directory
  ansible.builtin.file:
    path: "{{ backups_dir }}/jellyfin"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0755

- name: Make qbt backup directory
  ansible.builtin.file:
    path: "{{ backups_dir }}/qbt"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0755

- name: Copy backup script file in place.
  template:
    src: "backup-media.sh.j2"
    dest: "/usr/local/bin/backup-media.sh"
    owner: root
    group: root
    mode: 0755
  become: true

- name: Add cron job to run backup weekly, at midnight on Sundays.
  ansible.builtin.cron:
    name: Run media backup script.
    minute: "0"
    hour: "0"
    weekday: "0"
    job: "/usr/local/bin/backup-media.sh"
    state: present
  become: false

- name: Copy media.service script file in place.
  template:
    src: "media.service.j2"
    dest: "/etc/systemd/system/media.service"
    owner: root
    group: root
    mode: 0644
  become: true

- name: Copy startmedia script file in place.
  template:
    src: "startmedia.sh.j2"
    dest: "/home/media/startmedia.sh"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0755
  become: false

- name: Reload systemd manager configuration
  ansible.builtin.systemd:
    daemon_reload: yes
  become: true

- name: Ensure that media.service service is restarted and enabled on boot
  service:
    name: media.service
    enabled: true
